/*! built for dogtalk 2014-09-09 */
!function(){RemoteStorage.defineModule("contacts",function(a){function b(c){return i.isDir(c)?a.getListing(c).then(function(a){return i.asyncEach(a,function(a){return b(c+a)})}):a.remove(c)}function c(a,b,c){return j+a+"/"+encodeURIComponent(b)+"/"+encodeURIComponent(c)}function d(b,d,e){return a.getObject(c(b,d,e)).then(function(b){return b?i.asyncMap(b,function(b){return a.getObject("card/"+b)}):[]})}function e(b,d,e,f){var g=c(b,e,f);return a.getObject(g).then(function(b){return a.storeObject("index-node",g,(b||[]).concat([d]))})}function f(b,d,e,f){var g=c(b,e,f);return a.getObject(g).then(function(b){var c=[];return b?(b.forEach(function(a){a!==d&&c.push(a)}),a.storeObject(g)):void 0})}function g(a){return i.asyncEach(l,function(b){return e("contact",a.id,b,a[b])})}function h(a){return i.asyncEach(l,function(b){return f("contact",a.id,b,a[b])})}var i=remoteStorage.util,j="index/";a.declareType("contact","http://json-schema.org/card",{$schema:"http://json-schema.org/draft-03/schema#",description:"A representation of a person, company, organization, or place",type:"object",properties:{fn:{description:"Formatted Name",type:"string",required:!0},familyName:{type:"string"},givenName:{type:"string"},additionalName:{type:"array",items:{type:"string"}},honorificPrefix:{type:"array",items:{type:"string"}},honorificSuffix:{type:"array",items:{type:"string"}},nickname:{type:"string"},url:{type:"string",format:"uri"},email:{type:"object",properties:{type:{type:"string"},value:{type:"string",format:"email"}}},tel:{type:"object",properties:{type:{type:"string"},value:{type:"string",format:"phone"}}},adr:{$ref:"http: //json-schema.org/address"},geo:{$ref:"http: //json-schema.org/geo"},tz:{type:"string"},photo:{type:"string"},logo:{type:"string"},sound:{type:"string"},bday:{type:"string",format:"date"},title:{type:"string"},role:{type:"string"},org:{type:"object",properties:{organizationName:{type:"string"},organizationUnit:{type:"string"}}},impp:{type:"string",format:"uri"}}});var k={email:!0,impp:!0},l=Object.keys(k);return{exports:{on:a.on,getAll:function(){return a.getListing("card/").then(function(b){return i.asyncMap(b,function(b){return a.getObject("card/"+b)})})},byKey:function(a,b){if(!k[a])throw new Error("Key '"+a+"' is not indexed!");return d("contact",a,b)},add:function(b){return b.id=a.uuid(),a.storeObject("contact","card/"+b.id,b).then(function(){g(b)})},get:function(b){return a.getObject("card/"+b)},remove:function(b){return a.remove("card/"+b.id).then(function(){h(b)})},rebuildIndex:function(){return this.clearIndex().then(this.all).then(function(a){return i.asyncEach(a,g)})},clearIndex:function(){return b("index/")}}}})}(),function(){var a="messages";RemoteStorage.defineModule(a,function(a){function b(b,c){a.storeObject("last-message","last/"+b,{timestamp:c})}function c(a){a=""+a,console.log(a);var b=a.substr(0,4),c=a.substr(4,3);return b+"/"+c+"/"+a.substr(7)}return a.declareType("message",{description:"can be small (entry in the chat log) or big (email with CC's attachments)",key:"timestamp",properties:{from:{type:"useraddress",description:"the sender",required:!0},to:{type:"useraddress or [useraddress]",description:"the recipients. apart from mailto:, we invent mailcc:, mailbcc: to express CC's and BCC's",required:!0},text:{type:"utf-8 string",description:"human-readable message",required:!0},previous:{type:"map",properties:{key:"useraddress",type:"timestamp",description:"Previous message involving that contact"}}}}),a.declareType("last-message",{description:"pointer from a contact to the last message involving that contact",key:"useraddress",properties:{timestamp:{type:"timestamp",description:"timestamp of last message involving that contact"}}}),a.declareType("account",{description:"settings for a messaging account",properties:{name:{type:"string",description:"a unique identifier for this account (in scope of the account type)",required:!0},username:{type:"string",required:!0},password:{type:"string",required:!0},port:{type:"number",required:!0},resource:{type:"string",required:!0},server:{type:"string",required:!0}}}),{exports:{getAccounts:function(b){return b?a.getAll("accounts/"+b+"/"):a.getListing("accounts/").then(function(a){var b={};return remoteStorage.util.asyncEach(a,function(a){if(remoteStorage.util.isDir(a)){var c=a.slice(0,a.length-2);return remoteStorage.messages.getAccounts(c).then(function(a){b[c]=a})}}).then(function(){return b})})},getAccount:function(b,c){var d=encodeURIComponent(c);return a.getObject("accounts/"+b+"/"+d)},setAccount:function(b,c,d){var e=encodeURIComponent(c);return a.storeObject("account","accounts/"+b+"/"+e,d)},getContactsByRecency:function(){return a.getAll("last/").then(function(a){var b=[];for(var c in a)b.push({userAddress:c,lastMessage:a[c]});return b.sort(function(a,b){return a.timestamp-b.timestamp}),b})},log:function(d,e,f){var g=(new Date).getTime(),h={from:d,to:e,text:f,previous:{}};return a.getObject("last/"+d).then(function(f){return f&&(h.previous[d]=f.timestamp),a.storeObject("message","messages/"+c(g),h).then(function(){b(d);for(var a=0;a<e.length;a++)b(e[a],g)})})}}}})}(),function(){var a="sockethub";RemoteStorage.defineModule(a,function(a){return{exports:{c:a,init:function(){a.declareType("config",{description:"sockethub config file",type:"object",properties:{host:{type:"string",description:"the hostname to connect to",format:"uri",required:!0},port:{type:"number",description:"the port number to connect to",required:!0},path:{type:"string",description:"path portion of the URI, if any",required:!1},tls:{type:"boolean",description:"whether or not to use TLS",required:!1},secret:{type:"string",description:"the secret to identify yourself with the sockethub server",required:!0}}})},getConfig:function(){return a.getObject("config.json")},writeConfig:function(b){return a.storeObject("config","config.json",b)}}}})}();
/*! built for dogtalk 2014-09-09 */
angular.module("dogtalk",["ngSockethubClient","ngSockethubRemoteStorage","ngRemoteStorage","ngChat","ngMessages"]).config(["$routeProvider",function(a){a.when("/settings",{templateUrl:"settings.html",controller:"settingsCtrl"}).when("/",{templateUrl:"talk.html",controller:"talkCtrl"}).when("/talk/:address",{templateUrl:"talk.html",controller:"talkCtrl"}).otherwise({redirectTo:"/"})}]).run(["RemoteStorageConfig",function(a){a.modules=[["sockethub","rw",{cache:!1}],["messages","rw",{cache:!1}],["contacts","rw",{cache:!1}]]}]).run(["$rootScope","RS","$timeout",function(a,b,c){b.isConnected()||c(function(){b.isConnected()||a.$broadcast("message",{message:"remotestorage-connect",timeout:!1})},1e3)}]).run(["SockethubBootstrap",function(a){a.run({host:"silverbucket.net",port:"443",path:"/sockethub",tls:!0,secret:"1234567890"})}]).controller("appCtrl",["$scope","$rootScope","$route","$location",function(a,b,c,d){b.$on("$routeChangeStart",function(){console.log("routeChangeStart: ",a,b,c,d)}),b.$on("$routeChangeSuccess",function(){console.log("routeChangeSuccess")}),b.$on("$routeChangeError",function(a,b,c,d){console.log("routeChangeError: ",d)})}]).controller("navCtrl",["$scope","$route","$routeParams","$location",function(a,b,c,d){a.navClass=function(a){var b=d.path().substring(1)||"home";return a===b?"active":""}}]).controller("settingsCtrl",["$scope","$route","$routeParams","$rootScope",function(a,b,c,d){a.sockethubSettings=function(){d.$broadcast("showModalSockethubSettings",{locked:!1})},a.xmppSettings=function(){d.$broadcast("showModalSettingsXmpp",{locked:!1})},a.ircSettings=function(){d.$broadcast("showModalSettingsIrc",{locked:!1})}}]).controller("talkCtrl",["$scope","$route","$routeParams","$location","Chat","$rootScope","ChatSettings",function(a,b,c,d,e,f,g){console.log("--- talkCtrl run "+c.address),a.model={presence:e.presence.data,contacts:e.contacts.data,requests:e.requests.data,settings:g},a.model.current={address:c.address,contact:a.model.contacts[c.address]?a.model.contacts[c.address]:"",conversation:a.model.contacts[c.address]?a.model.contacts[c.address].conversation:[]},console.log("scope.model.current.contact: ",a.model.current),a.$watch("model.contacts",function(a,b){console.log("SCOPE WATCH CONTACTS : ",a,b)}),a.conversationSwitch=function(b){return console.log("---- talkCtrl.conversationSwitch("+b+")"),b!==c.address?"":(a.model.contacts[b]?(a.model.current.contact=a.model.contacts[c.address]?a.model.contacts[c.address]:"",a.model.current.conversation=a.model.contacts[b].conversation,console.log("currentConversation: ",a.model.current.conversation)):console.log("talkCtrl.conversationSwitch() - not in history"),"active")},a.sendMsg=function(b){a.model.saving=!0,e.sendMsg(a.model.current.address,b).then(function(){a.model.sendText="",a.model.saving=!1},function(b){console.log("sendMsg error: ",b),a.model.saving=!1})},a.isFromMe=function(a){return e.isFromMe(a)},a.acceptBuddyRequest=function(b){return console.log("acceptBuddyRequest: "+b),a.model.saving=!0,a.model.requests[b]?void e.requests.accept(b).then(function(){return a.model.saving=!1,delete a.model.requests[b],!0},function(){return a.model.saving=!1,!1}):(a.model.saving=!1,!1)}}]),angular.module("ngSockethubRemoteStorage",["ngSockethubClient","ngRemoteStorage"]).value("srsLocalSettings",{appName:"default"}).run(["$rootScope","SockethubSettings","SH","RS","srsLocalSettings",function(a,b,c,d,e){a.$on("sockethubSettingsSaved",function(){console.log("Sockethub-RemoteStorage: saving sockethub config to remoteStorage ",b.conn),d.call("sockethub","writeConfig",[e.appName,b.conn]).then(function(){},function(){a.$broadcast("message",{message:"failed saving sockethub config to remote storage",type:"error",topic:"remotestorage",timeout:!0})})})}]).factory("SockethubBootstrap",["RS","SockethubSettings","$rootScope","SH","$timeout","srsLocalSettings",function(a,b,c,d,e,f){function g(e,g,h){function i(a){b.save("conn",a)?(c.$broadcast("message",{message:"attempting to connect to sockethub",type:"info",topic:"sockethub",timeout:!1}),d.connect({register:!0}).then(function(){c.$broadcast("message",{message:"connected to sockethub",type:"success",topic:"sockethub",timeout:!0})},function(a){console.log("error connecting to sockethub: ",a),c.$broadcast("SockethubConnectFailed",{message:a})})):c.$broadcast("message",{message:"failed saving sockethub credentials",topic:"sockethub",type:"error",timeout:!0})}"string"==typeof e&&(f.appName=e),"object"==typeof g&&(b.save("conn",g),b.save("defaultConn",g)),"object"==typeof h&&b.save("env",h),a.call("sockethub","getConfig",[f.appName]).then(function(a){console.log("GOT SH CONFIG: ",a);var b={};b="object"!=typeof a||"string"!=typeof a.host?g:a,i(b)},function(a){console.log("RS.call error: ",a),g&&(console.log("attempting to fallback to default config: ",g),i(g))})}return{run:g}}]),angular.module("ngSockethubClient",["ngCommandQueue"]).value("SockethubSettings",{conn:{host:"localhost",port:10550,path:"/sockethub",tls:!1,secret:"1234567890"},connected:!1,connecting:!1,registered:!1,env:{logo:"/res/img/sockethub-logo.svg"},save:function(a,b){return this.verify(a,b)?(this[a]=b,this[a].port=+b.port,!0):(console.log("SH SAVE FAILED "+a+": ",this[a]),!1)},exists:function(a){this.verify(a,this.conn)},verify:function(a,b){return b||(b=this[a]),"conn"===a?b.host&&""!==b.host&&b.port&&""!==b.port&&b.path&&""!==b.path&&"boolean"==typeof b.tls&&b.secret?!0:!1:!0}}).factory("SH",["$rootScope","$q","$timeout","SockethubSettings","cQueue",function(a,b,c,d,e){function f(){return d.connected&&d.registered?!0:!1}function g(){return d.connecting}function h(){return d.registered}function i(b){o[b.methods[0]].apply(o,b.params).then(function(c){a.$apply(function(){b.defer.resolve(c)})},function(c){a.$apply(function(){b.defer.reject(c.message)})})}function j(c){console.log("ngSockethubClient.connect() ",c),d.connecting=!0,d.registered=!1,d.connected=!1;var e=b.defer(),f="ws://";d.connected=!1,d.conn.tls&&(f="wss://");var g={};return c&&c.register&&(g={register:{secret:d.conn.secret}}),console.log("Sockethub connect: "+f+d.conn.host+":"+d.conn.port+d.conn.path+" register:"+typeof g.register),o=SockethubClient.connect(f+d.conn.host+":"+d.conn.port+d.conn.path,g),o.on("connected",function(){p.connected.sockethub?a.$apply(p.connected.sockethub()):"object"!=typeof c||c.register||(d.connected=!0,d.connecting=!1,a.$apply(function(){e.resolve()}))}),o.on("registered",function(){if(d.connected=!0,d.connecting=!1,d.registered=!0,p.registered.sockethub)a.$apply(p.registered.sockethub());else try{a.$apply(function(){e.resolve()})}catch(b){console.log("ngSockethubClient ERROR: ",b)}}),o.on("registration-failed",function(b){d.registered=!1,d.connecting=!1,console.log("Sockethub register failed ",b),a.$apply(function(){e.reject(b)})}),o.on("failed",function(b){d.registered=!1,d.connecting=!1,d.connected=!1,console.log("Sockethub connection failed ",b),a.$apply(function(){e.reject("Failed connecting to sockethub at "+f+d.conn.host+":"+d.conn.port+d.conn.path)})}),o.on("disconnected",function(a){d.registered=!1,d.connecting=!1,d.connected=!1,console.log("SH received disconnect(close) "+a)}),o.on("message",function(b){b.platform&&p.message[b.platform]?a.$apply(p.message[b.platform](b)):console.log("SH received message with nothing to call: ",b)}),o.on("unexpected-response",function(a){console.log("SH unexpected response: ",a)}),e.promise}function k(){var a=b.defer();return console.log("SH.register() called"),q.add({methods:["register"],params:[{secret:d.conn.secret}],defer:a,timeout:0,condition:f}),a.promise}function l(a,c,d,e){var f=b.defer(),g={};return g[c]={},g[c][d]=e,q.add({methods:["set"],params:[a,g],defer:f,timeout:0,condition:h}),f.promise}function m(a,c){var d=b.defer();return q.add({condition:h,methods:["sendObject"],params:[a,c],defer:d,timeout:0}),d.promise}function n(a,b){q.add({condition:h,methods:["sendObject"],params:[a,b],defer:!1,timeout:0})}var o,p={error:{},message:{},response:{},close:{},registered:{},connected:{}},q=e.init(i),r=function(a,b,c){p[b][a]=c};return{connect:j,register:k,isConnected:f,isRegistered:h,isConnecting:g,set:l,submit:{call:m,queue:n},on:r}}]).directive("sockethubSettings",["SH","$rootScope","SockethubSettings",function(a,b,c){return{restrict:"A",template:'<div class="col-xs-1"></div><div id="sockethubSettings" class="sockethub sockethub-form sockethub-settings col-xs-10">  <div class="sockethub-logo" style="text-align: center;">    <img data-ng-src="{{ sockethub.settings.env.logo }}" height="64" ng-cloak/>  </div>  <form name="settingsSockethub" role="form" class="form-horizontal" novalidate>    <fieldset>      <div class="form-group col-xs-12">        <label for="host" class="control-label">Hostname</label>        <div class="controls">          <input type="text" class="required form-control" name="host" placeholder="Enter hostname..." ng-model="sockethub.settings.conn.host" required>        </div>      </div>      <div class="form-group col-xs-12">        <label for="port" class="control-label">Port</label>        <div class="controls">          <input type="text" class="required form-control" name="port" placeholder="Enter port..." ng-model="sockethub.settings.conn.port" required>        </div>      </div>      <div class="form-group col-xs-12">        <label for="path" class="control-label">Path</label>        <div class="controls">          <input type="text" class="required form-control" name="path" placeholder="Enter path (if any)..." ng-model="sockethub.settings.conn.path">        </div>      </div>      <div class="form-group col-xs-12">        <div class="">          <div class="checkbox">            <label>              <input type="checkbox" name="tls" ng-model="sockethub.settings.conn.tls"> TLS            </label>          </div>        </div>      </div>      <div class="form-group col-xs-12">        <label for="secret" class="control-label">Secret</label>        <div class="controls">          <input type="text" class="required form-control" name="secret" placeholder="Enter secret..." ng-model="sockethub.settings.conn.secret" required>        </div>      </div>    </fieldset>    <div class="row">         <div class="col-xs-2"></div>         <div class="col-xs-4" style="padding:0 0 25px;margin:0 0 5px;">           <button class="btn btn-primary" ng-click="sockethub.save(sockethub.settings.conn)"                    ng-disabled="!sockethub.settings.verify(\'conn\', sockethub.settings.conn) || saving">Submit</button>         </div>         <div class="col-sm-6" style="padding:0;margin:0 0 5px;">           <button class="btn btn-default" ng-click="sockethub.useDefaults()">Populate Default Settings</button>         </div>    </div>  </form></div>',link:function(d){d.sockethub={saving:!1,settings:c,useDefaults:function(){console.log("useDefaults() called: ",c.defaultConn);for(var a in c.defaultConn)c.conn[a]=c.defaultConn[a]}},d.sockethub.save=function(c){d.sockethub.saving=!0,d.sockethub.settings.save("conn",c),b.$broadcast("message",{message:"attempting to connect to sockethub",type:"info",topic:"sockethub",timeout:!1}),a.connect({register:!0}).then(function(){d.sockethub.saving=!1,console.log("connected to sockethub"),b.$broadcast("message",{message:"connected to sockethub",type:"success",topic:"sockethub",timeout:!0}),b.$broadcast("sockethubSettingsSaved")},function(a){d.sockethub.saving=!1,console.log("error connection to sockethub: ",a),b.$broadcast("message",{message:a,type:"error",topic:"sockethub",timeout:!1})})}}}}]);